let logger,models,StatusCodes,uuidv4,getErrorMsg;_a56‍.x([["default",()=>_a56‍.o]]);_a56‍.w("npmlog",[["default",["logger"],function(v){logger=v}]]);_a56‍.w("../models",[["default",["models"],function(v){models=v}]]);_a56‍.w("http-status-codes",[["StatusCodes",["StatusCodes"],function(v){StatusCodes=v}]]);_a56‍.w("uuid",[["v4",["uuidv4"],function(v){uuidv4=v}]]);_a56‍.w("../utils/common",[["getErrorMsg",["getErrorMsg"],function(v){getErrorMsg=v}]]);





const { 
  sequelize
}  = models;

_a56‍.d({
  
  // Admin create new lession 
  getAllTeacher: async (req, res) => {
    try {
      const [listTeacher, _1] = await sequelize.query(
        "select * from users where user_type = 'T'"
      );
      return res.status(StatusCodes.CREATED).send({
        status: StatusCodes.CREATED,
        success: true,
        message: 'List teacher successfully found',
        data: listTeacher,
      });
    } catch (error) {
      logger.error('teacher_get', getErrorMsg(error));
      let errStatusCode = StatusCodes.INTERNAL_SERVER_ERROR;
      return res.status(errStatusCode).send({
        status: StatusCodes.INTERNAL_SERVER_ERROR,
        success: false,
        message: 'Teacher found failed',
      });
    }
  },
});