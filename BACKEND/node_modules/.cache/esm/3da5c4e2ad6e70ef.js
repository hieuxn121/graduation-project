let logger,models,StatusCodes,uuidv4,getErrorMsg;_ad6‍.x([["default",()=>_ad6‍.o]]);_ad6‍.w("npmlog",[["default",["logger"],function(v){logger=v}]]);_ad6‍.w("../models",[["default",["models"],function(v){models=v}]]);_ad6‍.w("http-status-codes",[["StatusCodes",["StatusCodes"],function(v){StatusCodes=v}]]);_ad6‍.w("uuid",[["v4",["uuidv4"],function(v){uuidv4=v}]]);_ad6‍.w("../utils/common",[["getErrorMsg",["getErrorMsg"],function(v){getErrorMsg=v}]]);





const {
  CategoriesCourse
} = models;

_ad6‍.d({

  // Admin create new lession 
  getAllCategory: async (req, res) => {
    try {
      const listCategory = await CategoriesCourse.findAll({
        attributes: ['cate_id', 'cate_name', 'cate_description'],
      });
      return res.status(StatusCodes.OK).send({
        status: StatusCodes.OK,
        success: true,
        message: 'List category successfully found',
        data: listCategory,
      });
    } catch (error) {
      logger.error('category_get', getErrorMsg(error));
      let errStatusCode = StatusCodes.INTERNAL_SERVER_ERROR;
      return res.status(errStatusCode).send({
        status: StatusCodes.INTERNAL_SERVER_ERROR,
        success: false,
        message: 'category found failed',
      });
    }
  },
});